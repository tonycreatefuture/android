apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.neenbedankt.android-apt'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.0'
    }
}

greendao {
    schemaVersion 1
    daoPackage 'com.zhongdasoft.svwtrainnet.greendao.gen'
    targetGenDir 'src/main/java'
}

apply from: "../../node_modules/react-native/react.gradle"
apply from: "../../node_modules/react-native-code-push/android/codepush.gradle"

android {
    signingConfigs {
        trainnetconfig {
            keyAlias 'svwtrainnet'
            keyPassword 'zhongdasoft'
            storeFile file('src/main/java/svwtrainnet.jks')
            storePassword 'zhongdasoft'
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.zhongdasoft.svwtrainnet"
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.trainnetconfig
        }
    }
    productFlavors {
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    dexOptions {
        preDexLibraries false
        jumboMode true
        javaMaxHeapSize "4g"
    }
    splits {
        // Split apks on build target ABI, view all options for the splits here:
        // http://tools.android.com/tech-do ... er-guide/apk-splits
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
//                include 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'mips', 'x86', 'x86_64'
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile project(':uikit')
    compile(name: 'android-crop-release', ext: 'aar')
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.belerweb:pinyin4j:2.5.1'
    compile 'org.greenrobot:greendao:3.2.0'
    compile 'org.greenrobot:greendao-generator:3.2.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.facebook.stetho:stetho:1.4.1'
    compile 'com.facebook.stetho:stetho-urlconnection:1.4.1'
    compile 'com.android.support:design:25.1.0'
    compile 'com.netease.nimlib:jsbridge:1.3.0'
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.facebook.react:react-native:+'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile project(':react-native-code-push')
    compile project(':react-native-orientation')
}

// Run this once to be able to run the application with BUCK
// puts all compile dependencies into folder libs for BUCK to use
task copyDownloadableDepsToLibs(type: Copy) {
    from configurations.compile
    into 'libs'
}
